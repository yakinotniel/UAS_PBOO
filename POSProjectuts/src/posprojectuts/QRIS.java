/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package posprojectuts;


import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.util.Random;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.EncodeHintType;
import com.google.zxing.WriterException;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;
import javax.swing.ImageIcon;

/**
 *
 * @author user
 */
public class QRIS extends javax.swing.JFrame {
    
    public static String konten;
    public static String invoiceID;
    public static ImageIcon icon;
    
    public static void QR(String content, String fileName){
        
        try {
            
                    String filePath = "../"+fileName; 
                    int width = 300; // Lebar QR code
                    int height = 300; // Tinggi QR code
                    String fileType = "png"; // Format file QR code (png, jpg, dll.)
                    File qrFile = new File(filePath);
                    // Delete qr code sebelumnya
                    qrFile.delete();
                    // Membuat QR code writer
                    QRCodeWriter qrCodeWriter = new QRCodeWriter();

                    // Mengatur parameter QR code seperti level koreksi kesalahan dan karakter encoding
                    java.util.Map<EncodeHintType, Object> hints = new java.util.HashMap<>();
                    hints.put(EncodeHintType.CHARACTER_SET, "UTF-8");
                    hints.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.L);

                    // Membuat bit matrix yang mewakili QR code
                    BitMatrix bitMatrix = qrCodeWriter.encode(content, BarcodeFormat.QR_CODE, width, height, hints);

                    // Mengubah bit matrix menjadi gambar QR code menggunakan BufferedImage
                    BufferedImage qrImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
                    for (int x = 0; x < width; x++) {
                        for (int y = 0; y < height; y++) {
                            qrImage.setRGB(x, y, bitMatrix.get(x, y) ? 0xFF000000 : 0xFFFFFFFF);
                        }
                    }

                    // Menyimpan gambar QR code ke dalam file
                    ImageIO.write(qrImage, fileType, qrFile);
                    System.out.println("QR code berhasil dibuat!");
                    
                    //String iconPath = "../"+fileName; // Replace with the path to your icon image
                    System.out.println(filePath);

                    icon = new ImageIcon(filePath);
                    //QRISLabel.setIcon(icon);
  
                } catch (WriterException | IOException e) {
                    System.out.println("Error: " + e.getMessage());
                }
    }
    
    

    /**
     * Creates new form QRIS
     */
    public QRIS() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        QRISLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        AcceptBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        QRISLabel.setIcon(icon);

        jLabel1.setText("QRIS");

        AcceptBtn.setText("ACCEPT!");
        AcceptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptBtnActionPerformed(evt);
            }
        });

        CancelBtn.setText("CANCEL!");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(443, 443, 443)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(300, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(QRISLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(243, 243, 243))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CancelBtn)
                            .addComponent(AcceptBtn))
                        .addGap(347, 347, 347))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(QRISLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(AcceptBtn)
                .addGap(27, 27, 27)
                .addComponent(CancelBtn)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AcceptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptBtnActionPerformed
        // TODO add your handling code here:
        Random rand = new Random();
        if (POSFrame.beliToken){
                int angka1 = rand.nextInt(10);
                int angka2 = rand.nextInt(10);
                int angka3 = rand.nextInt(10);
                int angka4 = rand.nextInt(10);
                int angka5 = rand.nextInt(10);
                int angka6 = rand.nextInt(10);
                int angka7 = rand.nextInt(10);
                int angka8 = rand.nextInt(10);
                int angka9 = rand.nextInt(10);
                int angka10 = rand.nextInt(10);
                int angka11 = rand.nextInt(10);
                int angka12 = rand.nextInt(10);
                int angka13 = rand.nextInt(10);
                int angka14 = rand.nextInt(10);
                int angka15 = rand.nextInt(10);
                int angka16 = rand.nextInt(10);
                int angka17 = rand.nextInt(10);
                int angka18 = rand.nextInt(10);
                int angka19 = rand.nextInt(10);
                int angka20 = rand.nextInt(10);

                Token.token = String.valueOf(angka1)+String.valueOf(angka2)+String.valueOf(angka3)+String.valueOf(angka4)+String.valueOf(angka5)+String.valueOf(angka6)+String.valueOf(angka7)+String.valueOf(angka8)+String.valueOf(angka9)+String.valueOf(angka10)+String.valueOf(angka11)+String.valueOf(angka12)+String.valueOf(angka13)+String.valueOf(angka14)+String.valueOf(angka15)+String.valueOf(angka16)+String.valueOf(angka17)+String.valueOf(angka18)+String.valueOf(angka19)+String.valueOf(angka20);

                JOptionPane.showMessageDialog(null, "Token = "+Token.token);
                POSFrame.beliToken = false;
            }

            String transaksitext = POSFrame.id_transaksi.getText();
            int inttransaksi = Integer.parseInt(transaksitext.substring(2));

            String totalBelanja = POSFrame.totalBelanjaTextField.getText();
            totalBelanja =totalBelanja.replace(",","");
            float TotalBelanja = Float.parseFloat(totalBelanja);


            Transaksi trans = new Transaksi(inttransaksi, TotalBelanja);

            for(int i=0; i<POSFrame.jumlahBelanja;i++){
                int id_barang = Integer.parseInt(POSFrame.daftarModel.getValueAt(i, 1).toString());
                String nama_barang = POSFrame.daftarModel.getValueAt(i,2).toString();
                float harga_satuan = Float.parseFloat(POSFrame.daftarModel.getValueAt(i,3).toString());
                int jumlah_barang = Integer.parseInt(POSFrame.daftarModel.getValueAt(i,4).toString());
                float harga_total = Float.parseFloat(POSFrame.daftarModel.getValueAt(i,8).toString());
                Transaksi.addItem(new Transaksi.rincian_transaksi(id_barang, nama_barang, harga_satuan, jumlah_barang, harga_total));
            }
            try {
            // Simpan data ke dalam database
            String strPilihan = String.valueOf(POSFrame.pilihan);
            Transaksi.simpanDatabase(strPilihan,invoiceID);
            // Jika berhasil, tampilkan pesan sukses
            JOptionPane.showMessageDialog(null, "Data transaksi berhasil disimpan!");
            this.dispose();
            new POSFrame().setVisible(true);
            POSFrame.kodetransaksi();

        } catch (SQLException ex) {
            // Jika terjadi error, tampilkan pesan error
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat menyimpan data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        POSFrame.jumlahBelanja = 0;
        Transaksi.listItem.clear();
    }//GEN-LAST:event_AcceptBtnActionPerformed

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new POSFrame().setVisible(true);
        
        POSFrame.jumlahBelanja = 0;
        Transaksi.listItem.clear();
    }//GEN-LAST:event_CancelBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QRIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QRIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QRIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QRIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QRIS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AcceptBtn;
    private javax.swing.JButton CancelBtn;
    public static javax.swing.JLabel QRISLabel;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
