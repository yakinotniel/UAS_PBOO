/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package posprojectuts;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;
import java.util.Random;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.JComboBox;
import posprojectuts.Transaksi.rincian_transaksi;

/**
 *
 * @author LENOVO
 */
public class POSFrame extends javax.swing.JFrame {

    ArrayList<Item> daftarItem;
    
    public static TableModel daftarModel;
    
    static int jumlahBelanja = 0;
    static Item tempItem;
    static int pilihan;
    public static boolean beliToken = false;
    /**
     * Creates new form POSFrame
     */
    
    public POSFrame() {
        DBConnector.initDBConnection();
        
//        daftarBarang = new ArrayList<Barang>();
        Barang.loadBarangFromDB();
        Makanan.loadBarangFromDB();
        Pulsa.loadBarangFromDB();
        Token.loadBarangFromDB();
        
        System.err.println(Item.daftarItem.size());
        
        daftarItem = Item.daftarItem;
        
        
        System.out.println(daftarItem.size());
        

//        Date date = new Date();
//        SimpleDateFormat s = new SimpleDateFormat("dd-MM-yyyy");
            Timer timer = new Timer(1000, e -> {
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
            LocalDateTime now = LocalDateTime.now();
            String formattedDate = now.format(formatter);
            txTanggal.setText(formattedDate);
        });
        timer.start();
        initComponents();
        kodetransaksi(); //fungsi
        
        
        daftarModel = daftarTable.getModel();
daftarModel.addTableModelListener(new TableModelListener() {
    @Override
    public void tableChanged(TableModelEvent tme) {
        if (tme.getColumn() == 4) {
            int baris = tme.getFirstRow();
            Object hargaObj = daftarModel.getValueAt(baris, 3);
            Object jumlahObj = daftarModel.getValueAt(baris, 4);
            
            if (hargaObj != null && jumlahObj != null) {
                float harga = ((Float) hargaObj).floatValue();
                int jumlah = ((Integer) jumlahObj).intValue();
                
                float total = harga * jumlah;
                daftarModel.setValueAt(total, baris, 8);
                
                float totalBelanja = 0.0f;
                total = 0.0f;
                
                int jumlahBelanja = daftarModel.getRowCount(); // Assuming jumlahBelanja is the number of rows
                
                for (int i = 0; i < jumlahBelanja; i++) {
                    Object totalObj = daftarModel.getValueAt(i, 8);
                    if (totalObj != null) {
                        total = ((Float) totalObj).floatValue();
                        totalBelanja += total;
                    }
                } 
                
                int totalBelanjaInt = (int) totalBelanja;
                totalBelanjaTextField.setText(String.valueOf(totalBelanjaInt));
            }
        }
    }
}
);

    }
public static void kodetransaksi(){
        try {
            Statement stmt = DBConnector.connection.createStatement();
            String sql = "SELECT COUNT(*) as jumlah_transaksi FROM transaksi";
            ResultSet rs = stmt.executeQuery(sql);
            rs.next();
            int JumlahData = rs.getInt("jumlah_transaksi");
            System.out.println(JumlahData);
            int idtransaksi = JumlahData+2;
            String idTransString = String.format("000%03d", idtransaksi);
            id_transaksi.setText(idTransString);
        } catch (SQLException ex) {
            Logger.getLogger(POSFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpanel1 = new javax.swing.JPanel();
        totalBelanjaTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        dibayarTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        kembalianTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btn_bayar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        BankComboBox = new javax.swing.JComboBox<>();
        NoKartuTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        JenisPembayaranTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        daftarTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        kodeTextField = new javax.swing.JTextField();
        namaTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txTanggal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        hargaTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        id_transaksi = new javax.swing.JTextField();
        NoTelpTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        NoMeteranTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 204, 204));

        jpanel1.setPreferredSize(new java.awt.Dimension(720, 720));

        totalBelanjaTextField.setEditable(false);
        totalBelanjaTextField.setBackground(new java.awt.Color(0, 204, 204));
        totalBelanjaTextField.setFont(new java.awt.Font("Kristen ITC", 0, 12)); // NOI18N
        totalBelanjaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalBelanjaTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        jLabel4.setText("Total Belanja");

        dibayarTextField.setEditable(false);
        dibayarTextField.setBackground(new java.awt.Color(0, 204, 204));
        dibayarTextField.setFont(new java.awt.Font("Kristen ITC", 0, 12)); // NOI18N
        dibayarTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bayar(evt);
            }
        });
        dibayarTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dibayarTextFieldKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        jLabel5.setText("Jumlah yang Dibayar");

        kembalianTextField.setEditable(false);
        kembalianTextField.setBackground(new java.awt.Color(0, 204, 204));
        kembalianTextField.setFont(new java.awt.Font("Kristen ITC", 0, 12)); // NOI18N
        kembalianTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembalianTextFieldActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        jLabel6.setText("Kembalian");

        btn_bayar.setBackground(new java.awt.Color(102, 255, 204));
        btn_bayar.setFont(new java.awt.Font("ROG Fonts", 0, 18)); // NOI18N
        btn_bayar.setText("Bayar");
        btn_bayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bayarActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        jLabel11.setText("Jenis Pembayaran");

        jLabel12.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        jLabel12.setText("Bank : ");

        BankComboBox.setBackground(new java.awt.Color(0, 204, 204));
        BankComboBox.setForeground(new java.awt.Color(255, 255, 255));
        BankComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BNI", "Mandiri" }));
        BankComboBox.setEnabled(false);

        NoKartuTextField.setEditable(false);
        NoKartuTextField.setBackground(new java.awt.Color(0, 204, 204));

        jLabel13.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        jLabel13.setText("No Kartu : ");

        JenisPembayaranTextField.setBackground(new java.awt.Color(0, 204, 204));
        JenisPembayaranTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JenisPembayaranTextFieldActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(0, 204, 204));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("Keterangan Jenis Pembayaran\n1 = Cash\n2 = Kartu Debit\n3 = QRIS");
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jpanel1Layout = new javax.swing.GroupLayout(jpanel1);
        jpanel1.setLayout(jpanel1Layout);
        jpanel1Layout.setHorizontalGroup(
            jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JenisPembayaranTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))
                    .addGroup(jpanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanel1Layout.createSequentialGroup()
                        .addGroup(jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(22, 22, 22)
                        .addGroup(jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dibayarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalBelanjaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kembalianTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btn_bayar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(46, 46, 46)
                .addGroup(jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BankComboBox, 0, 127, Short.MAX_VALUE)
                    .addComponent(NoKartuTextField))
                .addContainerGap())
        );
        jpanel1Layout.setVerticalGroup(
            jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel1Layout.createSequentialGroup()
                .addGroup(jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(totalBelanjaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(BankComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JenisPembayaranTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12)))
                .addGroup(jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanel1Layout.createSequentialGroup()
                        .addGroup(jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dibayarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(11, 11, 11)
                                .addGroup(jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(kembalianTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jpanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(NoKartuTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))))
                        .addGap(18, 18, 18)
                        .addComponent(btn_bayar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        daftarTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "Kode", "Nama", "Harga Satuan", "Jumlah", "Kadaluarsa", "Operator", "Nominal", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(daftarTable);
        if (daftarTable.getColumnModel().getColumnCount() > 0) {
            daftarTable.getColumnModel().getColumn(0).setResizable(false);
            daftarTable.getColumnModel().getColumn(0).setPreferredWidth(5);
            daftarTable.getColumnModel().getColumn(1).setResizable(false);
            daftarTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            daftarTable.getColumnModel().getColumn(2).setResizable(false);
            daftarTable.getColumnModel().getColumn(2).setPreferredWidth(300);
            daftarTable.getColumnModel().getColumn(3).setResizable(false);
            daftarTable.getColumnModel().getColumn(3).setPreferredWidth(50);
            daftarTable.getColumnModel().getColumn(4).setResizable(false);
            daftarTable.getColumnModel().getColumn(4).setPreferredWidth(20);
            daftarTable.getColumnModel().getColumn(5).setResizable(false);
            daftarTable.getColumnModel().getColumn(6).setResizable(false);
            daftarTable.getColumnModel().getColumn(7).setResizable(false);
            daftarTable.getColumnModel().getColumn(8).setResizable(false);
            daftarTable.getColumnModel().getColumn(8).setPreferredWidth(50);
        }

        jLabel1.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        jLabel1.setText("Kode");

        kodeTextField.setBackground(new java.awt.Color(0, 204, 204));
        kodeTextField.setFont(new java.awt.Font("Kristen ITC", 0, 14)); // NOI18N
        kodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeTextFieldActionPerformed(evt);
            }
        });

        namaTextField.setEditable(false);
        namaTextField.setBackground(new java.awt.Color(0, 204, 204));
        namaTextField.setFont(new java.awt.Font("Kristen ITC", 0, 14)); // NOI18N
        namaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaTextFieldActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        jLabel7.setText("Waktu");

        jLabel3.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        jLabel3.setText("Nama Barang");

        txTanggal.setEditable(false);
        txTanggal.setBackground(new java.awt.Color(0, 204, 204));
        txTanggal.setFont(new java.awt.Font("Kristen ITC", 0, 14)); // NOI18N
        txTanggal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txTanggalActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        jLabel2.setText("Harga");

        hargaTextField.setEditable(false);
        hargaTextField.setBackground(new java.awt.Color(0, 204, 204));
        hargaTextField.setFont(new java.awt.Font("Kristen ITC", 0, 12)); // NOI18N
        hargaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaTextFieldActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Kristen ITC", 1, 12)); // NOI18N
        jLabel8.setText("Kode transaksi");

        id_transaksi.setBackground(new java.awt.Color(0, 204, 204));
        id_transaksi.setFont(new java.awt.Font("Kristen ITC", 0, 14)); // NOI18N
        id_transaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_transaksiActionPerformed(evt);
            }
        });

        NoTelpTextField.setEditable(false);
        NoTelpTextField.setBackground(new java.awt.Color(0, 204, 204));
        NoTelpTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoTelpTextFieldActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        jLabel9.setText("No Hp");

        NoMeteranTextField.setEditable(false);
        NoMeteranTextField.setBackground(new java.awt.Color(0, 204, 204));
        NoMeteranTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoMeteranTextFieldActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        jLabel10.setText("No Meteran");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NoTelpTextField)
                            .addComponent(kodeTextField)
                            .addComponent(namaTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                            .addComponent(hargaTextField))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(id_transaksi, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                            .addComponent(txTanggal)
                            .addComponent(NoMeteranTextField))
                        .addGap(0, 249, Short.MAX_VALUE))
                    .addComponent(jpanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 983, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(namaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hargaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(id_transaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NoTelpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NoMeteranTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void namaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaTextFieldActionPerformed

    private void kodeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeTextFieldActionPerformed
        // TODO add your handling code here:

        try {
            String kodeInput = kodeTextField.getText();       
            NoTelpTextField.setEditable(false);
            NoMeteranTextField.setEditable(false);
            NoTelpTextField.setText("");
            NoMeteranTextField.setText("");
            boolean isFound = false;
            for (int i = 0; i < daftarItem.size(); i++) {
                tempItem = daftarItem.get(i);
                if (tempItem.kode.equals(kodeInput)) {
                    if (tempItem.operator != null){
                        isFound = true;
                        System.out.println("Barang Ditemukan");
                        i = daftarItem.size();
                        namaTextField.setText(tempItem.nama);
                        hargaTextField.setText(Float.toString(tempItem.harga));
                        NoTelpTextField.setEditable(true);
                        
                    }else if(tempItem.nominal != 0){
                        isFound = true;
                        System.out.println("Barang Ditemukan");
                        i = daftarItem.size();
                        namaTextField.setText(tempItem.nama);
                        hargaTextField.setText(Float.toString(tempItem.harga));
                        NoMeteranTextField.setEditable(true);
                        
                    }else{
                        isFound = true;
                        System.out.println("Barang Ditemukan");
                        i = daftarItem.size();
                        namaTextField.setText(tempItem.nama);
                        hargaTextField.setText(Float.toString(tempItem.harga));
                        daftarModel.setValueAt(jumlahBelanja+1, jumlahBelanja, 0);
                        daftarModel.setValueAt(kodeInput, jumlahBelanja, 1);
                        daftarModel.setValueAt(tempItem.nama, jumlahBelanja, 2);
                        daftarModel.setValueAt(tempItem.harga, jumlahBelanja, 3);
                        daftarModel.setValueAt(1, jumlahBelanja, 4);
                        if(tempItem.kadaluarsa == null){
                            daftarModel.setValueAt("-------------------------", jumlahBelanja, 5);
                        }else{
                            daftarModel.setValueAt(tempItem.kadaluarsa, jumlahBelanja, 5);
                        }

                        if(tempItem.operator == null){
                            daftarModel.setValueAt("-------------------------", jumlahBelanja, 6);
                        }else{
                            daftarModel.setValueAt(tempItem.operator, jumlahBelanja, 6);
                        }

                        if(tempItem.nominal == 0){
                            daftarModel.setValueAt("-------------------------", jumlahBelanja, 7);
                        }else{
                            daftarModel.setValueAt(String.valueOf(tempItem.nominal), jumlahBelanja, 7);
                        }
                        jumlahBelanja++;
                    }
                    
                }
            }
            if (!isFound) {
                throw new Exception("Kode barang tidak ditemukan!");
            }
        } catch (NumberFormatException ex) {
            // menangani kesalahan jika pengguna memasukkan kode dalam bentuk string
            JOptionPane.showMessageDialog(null, "Kode barang harus dalam bentuk angka!");
        } catch (Exception ex) {
            // menangani kesalahan jika kode barang yang dimasukkan pengguna tidak ada
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_kodeTextFieldActionPerformed

    private void btn_bayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bayarActionPerformed
        String invoiceID;
        Random rand = new Random(); 
        int temp1 = rand.nextInt(10);
        int temp2 = rand.nextInt(10);
        int temp3 = rand.nextInt(10);
        int temp4 = rand.nextInt(10);
        int temp5 = rand.nextInt(10);
        int temp6 = rand.nextInt(10);
        int temp7 = rand.nextInt(10);
        int temp8 = rand.nextInt(10);
        invoiceID = String.valueOf(temp1)+String.valueOf(temp2)+String.valueOf(temp3)+String.valueOf(temp4)+String.valueOf(temp5)+String.valueOf(temp6)+String.valueOf(temp7)+String.valueOf(temp8);
      
        if (pilihan == 1){
            if (beliToken){
                int angka1 = rand.nextInt(10);
                int angka2 = rand.nextInt(10);
                int angka3 = rand.nextInt(10);
                int angka4 = rand.nextInt(10);
                int angka5 = rand.nextInt(10);
                int angka6 = rand.nextInt(10);
                int angka7 = rand.nextInt(10);
                int angka8 = rand.nextInt(10);
                int angka9 = rand.nextInt(10);
                int angka10 = rand.nextInt(10);
                int angka11 = rand.nextInt(10);
                int angka12 = rand.nextInt(10);
                int angka13 = rand.nextInt(10);
                int angka14 = rand.nextInt(10);
                int angka15 = rand.nextInt(10);
                int angka16 = rand.nextInt(10);
                int angka17 = rand.nextInt(10);
                int angka18 = rand.nextInt(10);
                int angka19 = rand.nextInt(10);
                int angka20 = rand.nextInt(10);

                Token.token = String.valueOf(angka1)+String.valueOf(angka2)+String.valueOf(angka3)+String.valueOf(angka4)+String.valueOf(angka5)+String.valueOf(angka6)+String.valueOf(angka7)+String.valueOf(angka8)+String.valueOf(angka9)+String.valueOf(angka10)+String.valueOf(angka11)+String.valueOf(angka12)+String.valueOf(angka13)+String.valueOf(angka14)+String.valueOf(angka15)+String.valueOf(angka16)+String.valueOf(angka17)+String.valueOf(angka18)+String.valueOf(angka19)+String.valueOf(angka20);

                JOptionPane.showMessageDialog(null, "Token = "+Token.token);
                beliToken = false;
            }

            String transaksitext = id_transaksi.getText();
            int inttransaksi = Integer.parseInt(transaksitext.substring(2));

            String totalBelanja = totalBelanjaTextField.getText();
            totalBelanja =totalBelanja.replace(",","");
            float TotalBelanja = Float.parseFloat(totalBelanja);


            Transaksi trans = new Transaksi(inttransaksi, TotalBelanja);

            for(int i=0; i<jumlahBelanja;i++){
                int id_barang = Integer.parseInt(daftarModel.getValueAt(i, 1).toString());
                String nama_barang = daftarModel.getValueAt(i,2).toString();
                float harga_satuan = Float.parseFloat(daftarModel.getValueAt(i,3).toString());
                int jumlah_barang = Integer.parseInt(daftarModel.getValueAt(i,4).toString());
                float harga_total = Float.parseFloat(daftarModel.getValueAt(i,8).toString());
                Transaksi.addItem(new Transaksi.rincian_transaksi(id_barang, nama_barang, harga_satuan, jumlah_barang, harga_total));
            }
            try {
            // Simpan data ke dalam database
            String strPilihan = String.valueOf(pilihan);
            Transaksi.simpanDatabase(strPilihan,invoiceID);
            // Jika berhasil, tampilkan pesan sukses
            JOptionPane.showMessageDialog(null, "Data transaksi berhasil disimpan!");
            this.dispose();
            new POSFrame().setVisible(true);
            kodetransaksi();

        } catch (SQLException ex) {
            // Jika terjadi error, tampilkan pesan error
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat menyimpan data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        jumlahBelanja = 0;
        Transaksi.listItem.clear();
        }else if (pilihan == 2){
            if (beliToken){
                int angka1 = rand.nextInt(10);
                int angka2 = rand.nextInt(10);
                int angka3 = rand.nextInt(10);
                int angka4 = rand.nextInt(10);
                int angka5 = rand.nextInt(10);
                int angka6 = rand.nextInt(10);
                int angka7 = rand.nextInt(10);
                int angka8 = rand.nextInt(10);
                int angka9 = rand.nextInt(10);
                int angka10 = rand.nextInt(10);
                int angka11 = rand.nextInt(10);
                int angka12 = rand.nextInt(10);
                int angka13 = rand.nextInt(10);
                int angka14 = rand.nextInt(10);
                int angka15 = rand.nextInt(10);
                int angka16 = rand.nextInt(10);
                int angka17 = rand.nextInt(10);
                int angka18 = rand.nextInt(10);
                int angka19 = rand.nextInt(10);
                int angka20 = rand.nextInt(10);

                Token.token = String.valueOf(angka1)+String.valueOf(angka2)+String.valueOf(angka3)+String.valueOf(angka4)+String.valueOf(angka5)+String.valueOf(angka6)+String.valueOf(angka7)+String.valueOf(angka8)+String.valueOf(angka9)+String.valueOf(angka10)+String.valueOf(angka11)+String.valueOf(angka12)+String.valueOf(angka13)+String.valueOf(angka14)+String.valueOf(angka15)+String.valueOf(angka16)+String.valueOf(angka17)+String.valueOf(angka18)+String.valueOf(angka19)+String.valueOf(angka20);

                JOptionPane.showMessageDialog(null, "Token = "+Token.token);
                beliToken = false;
            }

            String transaksitext = id_transaksi.getText();
            int inttransaksi = Integer.parseInt(transaksitext.substring(2));

            String totalBelanja = totalBelanjaTextField.getText();
            totalBelanja =totalBelanja.replace(",","");
            float TotalBelanja = Float.parseFloat(totalBelanja);


            Transaksi trans = new Transaksi(inttransaksi, TotalBelanja);

            for(int i=0; i<jumlahBelanja;i++){
                int id_barang = Integer.parseInt(daftarModel.getValueAt(i, 1).toString());
                String nama_barang = daftarModel.getValueAt(i,2).toString();
                float harga_satuan = Float.parseFloat(daftarModel.getValueAt(i,3).toString());
                int jumlah_barang = Integer.parseInt(daftarModel.getValueAt(i,4).toString());
                float harga_total = Float.parseFloat(daftarModel.getValueAt(i,8).toString());
                Transaksi.addItem(new Transaksi.rincian_transaksi(id_barang, nama_barang, harga_satuan, jumlah_barang, harga_total));
            }
            try {
            // Simpan data ke dalam database
            String strPilihan = String.valueOf(pilihan);
            Transaksi.simpanDatabase(strPilihan,invoiceID);
            // Jika berhasil, tampilkan pesan sukses
            JOptionPane.showMessageDialog(null, "Data transaksi berhasil disimpan!");
            this.dispose();
            new POSFrame().setVisible(true);
            kodetransaksi();

        } catch (SQLException ex) {
            // Jika terjadi error, tampilkan pesan error
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat menyimpan data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        jumlahBelanja = 0;
        Transaksi.listItem.clear();
        }
    }//GEN-LAST:event_btn_bayarActionPerformed

    private void kembalianTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembalianTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kembalianTextFieldActionPerformed

    private void dibayarTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dibayarTextFieldKeyReleased
        // TODO add your handling code here:
        
        String dibayarString = dibayarTextField.getText();
        
        int dibayarInput = Integer.valueOf(dibayarString);
        
    }//GEN-LAST:event_dibayarTextFieldKeyReleased

    private void bayar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bayar
try {
    String totalbelanja = totalBelanjaTextField.getText();
    float  totalBelanja = Float.valueOf(totalbelanja);
    int totalBelanjaInt = (int)totalBelanja;
    
    String bayar = dibayarTextField.getText();
    float dibayar = Float.valueOf(bayar);
    int dibayarInt = (int)dibayar;
    
    int kembalianInt = dibayarInt - totalBelanjaInt;
    kembalianTextField.setText(String.format("%,d", kembalianInt));
    if (dibayarInt < totalBelanjaInt) {
        throw new Exception("Jumlah yang dibayar kurang dari total belanja!");
    }
        Statement stmt = DBConnector.connection.createStatement();
        String sql = "INSERT INTO keuangan(total, dibayar, kembalian) VALUES('"+totalBelanjaInt+"','"+dibayarInt+"','"+kembalianInt+"')";
        stmt.execute(sql);
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(null, "Masukan harus berupa angka!");
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, e.getMessage());
}
    }//GEN-LAST:event_bayar

    private void totalBelanjaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalBelanjaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalBelanjaTextFieldActionPerformed

    private void hargaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hargaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hargaTextFieldActionPerformed

    private void txTanggalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txTanggalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txTanggalActionPerformed

    private void id_transaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_transaksiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_transaksiActionPerformed

    private void NoTelpTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoTelpTextFieldActionPerformed
        // TODO add your handling code here:
        Pulsa.noTelp = NoTelpTextField.getText();
        daftarModel.setValueAt(jumlahBelanja+1, jumlahBelanja, 0);
        daftarModel.setValueAt(tempItem.kode, jumlahBelanja, 1);
        daftarModel.setValueAt((tempItem.nama+" "+Pulsa.noTelp), jumlahBelanja, 2);
        daftarModel.setValueAt(tempItem.harga, jumlahBelanja, 3);
        daftarModel.setValueAt(1, jumlahBelanja, 4);
        if(tempItem.kadaluarsa == null){
            daftarModel.setValueAt("-------------------------", jumlahBelanja, 5);
        }else{
            daftarModel.setValueAt(tempItem.kadaluarsa, jumlahBelanja, 5);
        }

        if(tempItem.operator == null){
            daftarModel.setValueAt("-------------------------", jumlahBelanja, 6);
        }else{
            daftarModel.setValueAt(tempItem.operator, jumlahBelanja, 6);
        }

        if(tempItem.nominal == 0){
            daftarModel.setValueAt("-------------------------", jumlahBelanja, 7);
        }else{
            daftarModel.setValueAt(String.valueOf(tempItem.nominal), jumlahBelanja, 7);
        }
        jumlahBelanja++;
        
    }//GEN-LAST:event_NoTelpTextFieldActionPerformed

    private void NoMeteranTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoMeteranTextFieldActionPerformed
        // TODO add your handling code here:
        beliToken = true;
        Token.noMeteran = NoMeteranTextField.getText();
        daftarModel.setValueAt(jumlahBelanja+1, jumlahBelanja, 0);
        daftarModel.setValueAt(tempItem.kode, jumlahBelanja, 1);
        daftarModel.setValueAt((tempItem.nama+" "+Token.noMeteran), jumlahBelanja, 2);
        daftarModel.setValueAt(tempItem.harga, jumlahBelanja, 3);
        daftarModel.setValueAt(1, jumlahBelanja, 4);
        if(tempItem.kadaluarsa == null){
            daftarModel.setValueAt("-------------------------", jumlahBelanja, 5);
        }else{
            daftarModel.setValueAt(tempItem.kadaluarsa, jumlahBelanja, 5);
        }

        if(tempItem.operator == null){
            daftarModel.setValueAt("-------------------------", jumlahBelanja, 6);
        }else{
            daftarModel.setValueAt(tempItem.operator, jumlahBelanja, 6);
        }

        if(tempItem.nominal == 0){
            daftarModel.setValueAt("-------------------------", jumlahBelanja, 7);
        }else{
            daftarModel.setValueAt(String.valueOf(tempItem.nominal), jumlahBelanja, 7);
        }
        jumlahBelanja++;
    }//GEN-LAST:event_NoMeteranTextFieldActionPerformed

    private void JenisPembayaranTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JenisPembayaranTextFieldActionPerformed
        // TODO add your handling code here:
        pilihan = Integer.valueOf(JenisPembayaranTextField.getText());
        if (pilihan == 1){
            BankComboBox.setEnabled(false);
            NoKartuTextField.setEditable(false);
            dibayarTextField.setEditable(true);
            NoKartuTextField.setText("");
            
        }else if(pilihan == 2){
            BankComboBox.setEnabled(true);
            NoKartuTextField.setEditable(true);
            dibayarTextField.setEditable(false);
            dibayarTextField.setText("");
            
        }else if(pilihan == 3){
            BankComboBox.setEnabled(false);
            NoKartuTextField.setEditable(false);
            dibayarTextField.setEditable(false);
            dibayarTextField.setText("");
            
            String invoiceID;
            Random rand = new Random(); 
            int temp1 = rand.nextInt(10);
            int temp2 = rand.nextInt(10);
            int temp3 = rand.nextInt(10);
            int temp4 = rand.nextInt(10);
            int temp5 = rand.nextInt(10);
            int temp6 = rand.nextInt(10);
            int temp7 = rand.nextInt(10);
            int temp8 = rand.nextInt(10);
            invoiceID = String.valueOf(temp1)+String.valueOf(temp2)+String.valueOf(temp3)+String.valueOf(temp4)+String.valueOf(temp5)+String.valueOf(temp6)+String.valueOf(temp7)+String.valueOf(temp8);
            
            
            
            BankComboBox.setEnabled(false);
            NoKartuTextField.setEditable(false);
            dibayarTextField.setEditable(false);
            QRIS.invoiceID = invoiceID;
            QRIS.konten = invoiceID+"TerimaKasih Telah Berbelanja";
            QRIS.QR(QRIS.konten, QRIS.invoiceID+".png");
            QRIS qris = new QRIS();
            setVisible(false);
            qris.setVisible(true);
        
            //class baru
            
        }else{
            JOptionPane.showMessageDialog(null, "Pilihan Tidak Ada!");
        }
        
    }//GEN-LAST:event_JenisPembayaranTextFieldActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new POSFrame().setVisible(true);
            }
        });
    }
                
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JComboBox<String> BankComboBox;
    private javax.swing.JTextField JenisPembayaranTextField;
    public static javax.swing.JTextField NoKartuTextField;
    private javax.swing.JTextField NoMeteranTextField;
    private javax.swing.JTextField NoTelpTextField;
    private javax.swing.JButton btn_bayar;
    private javax.swing.JTable daftarTable;
    private javax.swing.JTextField dibayarTextField;
    private javax.swing.JTextField hargaTextField;
    public static javax.swing.JTextField id_transaksi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPanel jpanel1;
    private javax.swing.JTextField kembalianTextField;
    private javax.swing.JTextField kodeTextField;
    private javax.swing.JTextField namaTextField;
    public static javax.swing.JTextField totalBelanjaTextField;
    private javax.swing.JTextField txTanggal;
    // End of variables declaration//GEN-END:variables
}
